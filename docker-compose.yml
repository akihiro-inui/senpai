version: '3.7'

services:
  frontend:
    container_name: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - "./frontend:/frontend"
    ports:
      - 3000:3000
    environment:
      CHOKIDAR_USEPOLLING: "true"
      BACKEND_API_HOST: "localhost"
      BACKEND_API_PORT: 5432
    depends_on:
      - backend

  backend:
     container_name: backend
     restart: always
     build:
         context: ./backend
         dockerfile: Dockerfile
     volumes:
       - "./backend:/backend"
     environment:
         - MENTOR_DB_HOST=$MENTOR_DB_HOST
         - MENTOR_DB_NAME=$MENTOR_DB_NAME
         - MENTOR_DB_USER=$MENTOR_DB_USER
         - MENTOR_DB_PORT=$MENTOR_DB_PORT
         - MENTOR_DB_PASSWORD=$MENTOR_DB_PASSWORD
         - MENTOR_DB_SCHEMAS=$MENTOR_DB_SCHEMAS
     ports:
         - 5000:5000
     depends_on:
       database:
         condition: service_healthy

  database:
     container_name: database
     image: postgres
     restart: always
     healthcheck:
       test: ["CMD-SHELL", "pg_isready"]
       interval: 10s
       timeout: 5s
       retries: 5
     environment:
         - POSTGRES_USER=$MENTOR_DB_USER
         - POSTGRES_PASSWORD=$MENTOR_DB_PASSWORD
     volumes:
         - db_volume:/var/lib/postgresql
     ports:
         - 5432:5432

volumes:
  db_volume: {}